{"mappings":"AAGA,MAAMA,EAASC,SAASC,cAAc,iBAChCC,EAAUF,SAASC,cAAc,aACjCE,EAAQH,SAASC,cAAc,UAC/BG,EAASJ,SAASC,cAAc,WAUtC,SAASI,EAAYC,GACnB,MAAMC,EAAUD,EAAME,KAAIC,GAT5B,UAAsBC,GAAEA,EAAEC,KAAEA,IAC1B,MAAMC,EAASZ,SAASa,cAAc,UAItC,OAHAD,EAAOE,aAAa,QAASJ,GAC7BE,EAAOG,UAAYJ,EAEZC,C,CAI2BI,CAAaP,KAC/CV,EAAOkB,UAAUV,E,EA6BnBW,iBACE,IACEd,EAAOe,MAAMC,QAAU,QACvB,MAAMC,QC/CDC,MAAM,uCAAyBC,MAAKC,IACzC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,cAElB,OAAOF,EAASG,MAAM,ID4CtBtB,EAAYgB,GAWZtB,EAAO6B,iBAAiB,UATxBV,iBC1CG,IAAyBW,ED4C1B,MAAMC,EAhBY,IAAEC,IAAEA,OAC1B,MAAMC,EAAMhC,SAASa,cAAc,OAInC,OAHAmB,EAAIlB,aAAa,MAAOiB,GACxBC,EAAIC,UAAUC,IAAI,OAEXF,CAAG,EAWYG,OC5CQN,ED2CU9B,EAAOqC,MC1CxCd,MAAM,wDAA0CO,KAAWN,MAChEC,IACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,cAElB,OAAOF,EAASG,MAAM,MDuChBU,EAAUhB,EAAKiB,QAAOC,GAAMA,EAAG7B,KAAOX,EAAOqC,QACnDlC,EAAQsC,kBACRpC,EAAOe,MAAMC,QAAU,OACvBlB,EAAQe,OAAOa,EAtCI,GAACnB,KAAEA,EAAI8B,YAAEA,EAAWC,YAAEA,MAC7C,MAAMC,EAAW3C,SAASa,cAAc,OAClC+B,EAAQ5C,SAASa,cAAc,MACrC+B,EAAM7B,UAAYJ,EAClB,MAAMkC,EAAQ7C,SAASa,cAAc,KACrCgC,EAAM9B,UAAY0B,EAElB,MAAMK,EAAkB9C,SAASa,cAAc,KAC/CiC,EAAgB/B,UAAY2B,EAC5B,MAAMK,EAAkB/C,SAASa,cAAc,QAM/C,OALAkC,EAAgBhC,UAAY,eAE5B+B,EAAgBE,QAAQD,GACxBJ,EAAS1B,OAAO2B,EAAOC,EAAOC,GAEvBH,CAAQ,EAuBeM,IAAoBZ,G,IAIhD,MAAOa,GACP/C,EAAMgB,MAAMC,QAAU,O,EAI1B+B","sources":["src/js/data.js","src/services/cat-api.js"],"sourcesContent":["import {fetchApi, fetchCatByBreed} from '../services/cat-api.js'\r\nimport '../sass/_test.scss'\r\n\r\nconst select = document.querySelector('.breed-select');\r\nconst catInfo = document.querySelector('.cat-info');\r\nconst error = document.querySelector('.error');\r\nconst loader = document.querySelector('.loader');\r\n\r\nfunction createOption({ id, name }) {\r\n  const option = document.createElement('option');\r\n  option.setAttribute('value', id);\r\n  option.innerText = name;\r\n\r\n  return option;\r\n}\r\n\r\nfunction optionsList(dates) {\r\n  const arrTags = dates.map(date => createOption(date));\r\n  select.append(...arrTags);\r\n}\r\n\r\nconst createInfoMarkup = ({ name, description, temperament }) => {\r\n  const cardInfo = document.createElement('div');\r\n  const title = document.createElement('h2');\r\n  title.innerText = name;\r\n  const about = document.createElement('p');\r\n  about.innerText = description;\r\n\r\n  const temperamentInfo = document.createElement('p');\r\n  temperamentInfo.innerText = temperament;\r\n  const temperamentBold = document.createElement('span');\r\n  temperamentBold.innerText = 'Temperament:';\r\n\r\n  temperamentInfo.prepend(temperamentBold);\r\n  cardInfo.append(title, about, temperamentInfo);\r\n\r\n  return cardInfo;\r\n};\r\n\r\nconst createImgMarkup = ([{ url }]) => {\r\n  const img = document.createElement('img');\r\n  img.setAttribute('src', url);\r\n  img.classList.add('pic');\r\n\r\n  return img;\r\n};\r\n\r\nasync function createBreedList() {\r\n  try {\r\n    loader.style.display = 'block';\r\n    const data = await fetchApi();\r\n    optionsList(data);\r\n\r\n    async function renderInfo() {\r\n      const image = await fetchCatByBreed(select.value);\r\n      const renderImg = createImgMarkup(image);\r\n      const infoObj = data.filter(el => el.id === select.value);\r\n      catInfo.replaceChildren();\r\n      loader.style.display = 'none';\r\n      catInfo.append(renderImg, createInfoMarkup(...infoObj));\r\n    }\r\n\r\n    select.addEventListener('change', renderInfo);\r\n  } catch (err) {\r\n    error.style.display = 'block';\r\n  }\r\n}\r\n\r\ncreateBreedList();\r\n\r\n// Коллекция пород\r\n// При загрузке страницы должен выполняться HTTP-запрос за коллекцией пород.\r\n//Для этого необходимо выполнить GET-запрос на ресурс https://api.thecatapi.com/v1/breeds,\r\n//возвращающий массив объектов. При успешном запросе, необходимо наполнить select.breed-select\r\n//опциями так, чтобы value опции содержал id породы, а в интерфейсе пользователю отображалось название породы.\r\n\r\n// Напиши функцию fetchBreeds() которая делает HTTP-запрос и возвращает промис с массивом пород -\r\n//результатом запроса. Вынеси её в файл cat-api.js и сделай именованный экспорт.\r\n\r\n// Информация о коте\r\n// Когда пользователь выбирает опцию в селекте, необходимо выполнять запрос за полной информацией\r\n//о коте на ресурс https://api.thecatapi.com/v1/images/search. Не забудь указать в этом запросе параметр\r\n//строки запроса breed_ids с идентификатором породы. Ознакомься с документацией ресурса.\r\n\r\n// Напиши функцию fetchCatByBreed(breedId) которая ожидает идентификатор породы, делает HTTP-запрос и\r\n//возвращает промис с данными о коте - результатом запроса. Вынеси её в файл cat-api.js и сделай именованный экспорт.\r\n\r\n// Если запрос был успешный, под селектом, в блоке div.cat-info появляется изображение и развернутая\r\n//информация о коте: название породы, описание и темперамент.\r\n\r\n// Обработка состояния загрузки\r\n// Пока идет любой HTTP-запрос, необходимо показывать загрузчик - элемент p.loader. Пока запросов нет или\r\n//когда запрос завершился, загрузчик необходимо скрывать. Используй для этого дополнительные CSS классы.\r\n\r\n// Пока идет запрос за списком пород, необходимо скрыть select.breed-select и показать p.loader.\r\n// Пока идет запрос за инфорацией о коте, необходимо скрыть div.cat-info и показать p.loader.\r\n// Когда любой запрос завершился, p.loader необходимо скрыть\r\n// Обработка ошибки\r\n// Если у пользователя произошла ошибка любого HTTP-запроса, например упала сеть, была потеря пакетов и т. п., то есть промис был отклонен, необходимо отобразить элемент p.error, а при каждом последующем запросе скрывать его. Используй для этого дополнительные CSS классы.\r\n\r\n// Протестировать работоспособноть отображения ошибки очень просто - измени адрес запроса добавив в конец любой символ, например вместо https://api.thecatapi.com/v1/breeds используй https://api.thecatapi.com/v1/breeds123. Запрос получения списка пород будет отклонен с ошибкой. Аналогично для запроса информации о коте по породе.\r\n\r\n// Интерфейс\r\n// Добавь минимальное оформление элементов интерфейса.\r\n// Вместо select.breed-select можешь использовать любую библиотеку с красивыми селектом, например https://slimselectjs.com/\r\n// Вместо p.loader можешь использовать любую библиотеку с красивыми CSS-загрузчиками, например https://cssloaders.github.io/\r\n// Вместо p.error можешь использовать любую библиотеку с красивыми оповещениями, например Notiflix","const BASE_URL = 'https://api.thecatapi.com';\n\nexport function fetchApi() {\n  return fetch(`${BASE_URL}/v1/breeds`).then(responce => {\n    if (!responce.ok) {\n      throw new Error('тут ошибка');\n    }\n    return responce.json();\n  });\n}\n\nexport function fetchCatByBreed(breedId) {\n  return fetch(`${BASE_URL}/v1/images/search?breed_ids=${breedId}`).then(\n    responce => {\n      if (!responce.ok) {\n        throw new Error('This ERROR');\n      }    \n      return responce.json();\n    }\n  );\n}\n\n"],"names":["$deb185f198c84388$var$select","document","querySelector","$deb185f198c84388$var$catInfo","$deb185f198c84388$var$error","$deb185f198c84388$var$loader","$deb185f198c84388$var$optionsList","dates","arrTags","map","date","id","name","option","createElement","setAttribute","innerText","$deb185f198c84388$var$createOption","append","async","style","display","data","fetch","then","responce","ok","Error","json","addEventListener","breedId","renderImg","url","img","classList","add","$deb185f198c84388$var$createImgMarkup","value","infoObj","filter","el","replaceChildren","description","temperament","cardInfo","title","about","temperamentInfo","temperamentBold","prepend","$deb185f198c84388$var$createInfoMarkup","err","$deb185f198c84388$var$createBreedList"],"version":3,"file":"index.5e9f99de.js.map"}